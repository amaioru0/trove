{
  "address": "0x685C50f23384fEc27e1AD5B44F9cfe7835299067",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_hideServ",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "layerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "entityId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "enum TroveRegistry.EntityType",
          "name": "entityType",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "enum TroveRegistry.TreasureType",
          "name": "treasureType",
          "type": "uint8"
        }
      ],
      "name": "EntityAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "layerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "entityId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "enum TroveRegistry.EntityType",
          "name": "entityType",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "enum TroveRegistry.TreasureType",
          "name": "treasureType",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "geohash",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        }
      ],
      "name": "EntityReady",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "layerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "NewLayer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "layerId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "enum TroveRegistry.EntityType",
          "name": "entityType",
          "type": "uint8"
        },
        {
          "internalType": "enum TroveRegistry.TreasureType",
          "name": "treasureType",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        }
      ],
      "name": "addEntity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "prover",
          "type": "address"
        }
      ],
      "name": "createLayer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "entities",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "enum TroveRegistry.EntityType",
          "name": "entityType",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "geohash",
          "type": "string"
        },
        {
          "internalType": "enum TroveRegistry.TreasureType",
          "name": "treasureType",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "entitiesCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "layerId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "entityId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "geohash",
          "type": "string"
        }
      ],
      "name": "fullfillGeohash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "layers",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "layerId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "prover",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x5ad1ee837aa8f0c9e9c2aa9a1f2216eb873bcbfe94762e2a7a0e3e2739e732b5",
  "receipt": {
    "to": null,
    "from": "0x7084C8A2943df2115C4Ca9b70ce6b963A5993906",
    "contractAddress": "0x685C50f23384fEc27e1AD5B44F9cfe7835299067",
    "transactionIndex": 10,
    "gasUsed": "1415368",
    "logsBloom": "0x000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000008000010000000000000001000000000040000000000200008000000000000008000000000000000000800000000000004000000000000000000000000000000000000000000000800000000000000000002000000000000000000000000000000000000000000000000000000000000040000000004000000000010000000000000000000000000000001000400000a0010000000010000000040000000000000000000000000000000000000000100000",
    "blockHash": "0xb4d9578a08110f27a0fb40eb9c7530c0d5eaf6338327af248700b5df07b6d7d5",
    "transactionHash": "0x5ad1ee837aa8f0c9e9c2aa9a1f2216eb873bcbfe94762e2a7a0e3e2739e732b5",
    "logs": [
      {
        "transactionIndex": 10,
        "blockNumber": 24665042,
        "transactionHash": "0x5ad1ee837aa8f0c9e9c2aa9a1f2216eb873bcbfe94762e2a7a0e3e2739e732b5",
        "address": "0x685C50f23384fEc27e1AD5B44F9cfe7835299067",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000007084c8a2943df2115c4ca9b70ce6b963a5993906"
        ],
        "data": "0x",
        "logIndex": 20,
        "blockHash": "0xb4d9578a08110f27a0fb40eb9c7530c0d5eaf6338327af248700b5df07b6d7d5"
      },
      {
        "transactionIndex": 10,
        "blockNumber": 24665042,
        "transactionHash": "0x5ad1ee837aa8f0c9e9c2aa9a1f2216eb873bcbfe94762e2a7a0e3e2739e732b5",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000007084c8a2943df2115c4ca9b70ce6b963a5993906",
          "0x000000000000000000000000be188d6641e8b680743a4815dfa0f6208038960f"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000a0e8a14f940f8000000000000000000000000000000000000000000000000176bb78381ea7bac000000000000000000000000000000000000000000000656bcbbdb9e83b6eb370000000000000000000000000000000000000000000000001761a8f96cf13ab4000000000000000000000000000000000000000000000656bcc5ea2898b02c2f",
        "logIndex": 21,
        "blockHash": "0xb4d9578a08110f27a0fb40eb9c7530c0d5eaf6338327af248700b5df07b6d7d5"
      }
    ],
    "blockNumber": 24665042,
    "cumulativeGasUsed": "3003190",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x1406FFFCA4a936907Fe82F2180D2c7484b9609B3"
  ],
  "numDeployments": 1,
  "solcInputHash": "acb1698faec19b88ece0b8abdd0a039b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_hideServ\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"layerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"entityId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"enum TroveRegistry.EntityType\",\"name\":\"entityType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"enum TroveRegistry.TreasureType\",\"name\":\"treasureType\",\"type\":\"uint8\"}],\"name\":\"EntityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"layerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"entityId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"enum TroveRegistry.EntityType\",\"name\":\"entityType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"enum TroveRegistry.TreasureType\",\"name\":\"treasureType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"geohash\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"}],\"name\":\"EntityReady\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"layerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"NewLayer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"layerId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"enum TroveRegistry.EntityType\",\"name\":\"entityType\",\"type\":\"uint8\"},{\"internalType\":\"enum TroveRegistry.TreasureType\",\"name\":\"treasureType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"}],\"name\":\"addEntity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"prover\",\"type\":\"address\"}],\"name\":\"createLayer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"entities\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"enum TroveRegistry.EntityType\",\"name\":\"entityType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"geohash\",\"type\":\"string\"},{\"internalType\":\"enum TroveRegistry.TreasureType\",\"name\":\"treasureType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"entitiesCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"layerId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"entityId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"geohash\",\"type\":\"string\"}],\"name\":\"fullfillGeohash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"layers\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"layerId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"prover\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"alex@homebox.ie\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Trove/TroveRegistry.sol\":\"TroveRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Counters.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Counters\\n * @author Matt Condon (@shrugs)\\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\\n *\\n * Include with `using Counters for Counters.Counter;`\\n */\\nlibrary Counters {\\n    struct Counter {\\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\\n        uint256 _value; // default: 0\\n    }\\n\\n    function current(Counter storage counter) internal view returns (uint256) {\\n        return counter._value;\\n    }\\n\\n    function increment(Counter storage counter) internal {\\n        unchecked {\\n            counter._value += 1;\\n        }\\n    }\\n\\n    function decrement(Counter storage counter) internal {\\n        uint256 value = counter._value;\\n        require(value > 0, \\\"Counter: decrement overflow\\\");\\n        unchecked {\\n            counter._value = value - 1;\\n        }\\n    }\\n\\n    function reset(Counter storage counter) internal {\\n        counter._value = 0;\\n    }\\n}\\n\",\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\"},\"src/Trove/TroveRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-1.0\\npragma solidity 0.8.7;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Counters.sol\\\";\\n\\n/// @custom:security-contact alex@homebox.ie\\n\\n\\ncontract TroveRegistry is Ownable {\\n\\n    address hideServ;\\n    address vault;\\n\\n    constructor (address _hideServ) {\\n        hideServ = _hideServ;\\n    }\\n\\n\\n    using Counters for Counters.Counter;\\n    Counters.Counter private _layersIdCounter;\\n\\n    // Allowed entity types\\n    enum EntityType{ TREASURE, SHOWCASE, CUSTOM }\\n\\n    // Allowed treasure types\\n    enum TreasureType{ VAULT, MINTABLE }\\n\\n    // Entity struct\\n    struct Entity {\\n        // for all entities\\n        string name;\\n        EntityType entityType;\\n        bool status;\\n        string geohash;\\n        // for treasure entities\\n        TreasureType treasureType;\\n        // for TreasureType VAULT\\n        uint256 vaultId;\\n        // for TreasureType MINTABLE \\n    }\\n    \\n    // Layer struct\\n    struct Layer {\\n        string name;\\n        uint256 layerId;\\n        address owner;\\n        address prover;\\n    }\\n\\n    // Mapping holding all layers\\n    mapping(uint256 => Layer) public layers;\\n\\n    // Mapping holding all entities for a specified layer\\n    mapping(uint256 => mapping(uint256 => Entity)) public entities;\\n\\n    // Mapping holding entities ids for each layer\\n    mapping(uint256 => Counters.Counter) public entitiesCounter;\\n\\n    // Event emited when a new layer is created\\n    event NewLayer(string name, uint256 layerId, address owner);\\n\\n    // Event emited when a new entity is added to a layer\\n    event EntityAdded(uint256 layerId, uint256 entityId, string name, EntityType entityType, TreasureType treasureType);\\n\\n    // Event emited when geohash was fullfilled on entity\\n    event EntityReady(uint256 layerId, uint256 entityId, string name, EntityType entityType, TreasureType treasureType, string geohash, bool status, uint256 vaultId);\\n\\n    // Function to create a new layer\\n    function createLayer(string calldata name, address owner, address prover) public {\\n        uint256 layerId = _layersIdCounter.current();\\n        Layer storage l = layers[layerId];\\n        l.name = name;\\n        l.layerId = layerId;\\n        l.owner = owner;\\n        l.prover = prover;\\n\\n        emit NewLayer(name, layerId, owner);\\n        _layersIdCounter.increment();\\n    }\\n\\n\\n    // Function to add a new entity to a layer by layer owner\\n    function addEntity(uint256 layerId, string calldata name, EntityType entityType, TreasureType treasureType, uint256 vaultId) public {\\n        // require(msg.sender == layers[layerId].owner), \\\"Only layer owner can add entity\\\");\\n        uint256 entityId = entitiesCounter[layerId].current();\\n        entities[layerId][entityId] = Entity({\\n            name: name,\\n            entityType: entityType,\\n            status: false,\\n            geohash: \\\"\\\",\\n            treasureType: treasureType,\\n            vaultId: vaultId\\n        });\\n        entitiesCounter[layerId].increment();\\n        emit EntityAdded(layerId, entityId, name, entityType, treasureType);\\n    }\\n\\n    // hideServ update geohash function\\n    function fullfillGeohash(uint256 layerId, uint256 entityId, string calldata geohash) public {\\n        require(msg.sender == hideServ, \\\"Omly hideServ can fullfill geohash\\\");\\n        entities[layerId][entityId].geohash = geohash;\\n        entities[layerId][entityId].status = true;\\n        // event EntityReady(uint256 layerId, uint256 entityId, string name, EntityType entityType, TreasureType treasureType, string geohash, bool status, uint256 vaultId);\\n        emit EntityReady(layerId, entityId, entities[layerId][entityId].name, entities[layerId][entityId].entityType, entities[layerId][entityId].treasureType, entities[layerId][entityId].geohash, entities[layerId][entityId].status, entities[layerId][entityId].vaultId);\\n    }\\n\\n\\n}\",\"keccak256\":\"0x354c03dcaa7df546bba73108bd7d4bbc0ddc0a676340cc9352389e60b74e89de\",\"license\":\"AGPL-1.0\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620019d0380380620019d0833981810160405281019062000037919062000182565b620000576200004b6200009f60201b60201c565b620000a760201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000207565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200017c81620001ed565b92915050565b6000602082840312156200019b576200019a620001e8565b5b6000620001ab848285016200016b565b91505092915050565b6000620001c182620001c8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b620001f881620001b4565b81146200020457600080fd5b50565b6117b980620002176000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b1461010a5780639e9198c214610128578063a2fecb861461015b578063ab43572714610177578063f2fde38b146101ac57610093565b80630a44bba4146100985780631fa851ed146100c857806342683b70146100e4578063715018a614610100575b600080fd5b6100b260048036038101906100ad9190610ef9565b6101c8565b6040516100bf9190611384565b60405180910390f35b6100e260048036038101906100dd9190611000565b6101e6565b005b6100fe60048036038101906100f99190610e85565b610447565b005b61010861055e565b005b6101126105e6565b60405161011f919061120e565b60405180910390f35b610142600480360381019061013d9190610ef9565b61060f565b60405161015294939291906112d8565b60405180910390f35b61017560048036038101906101709190610f26565b610707565b005b610191600480360381019061018c9190610fc0565b61091d565b6040516101a396959493929190611269565b60405180910390f35b6101c660048036038101906101c19190610e58565b610a9d565b005b60066020528060005260406000206000915090508060000154905081565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610276576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026d90611344565b60405180910390fd5b818160056000878152602001908152602001600020600086815260200190815260200160002060020191906102ac929190610c85565b50600160056000868152602001908152602001600020600085815260200190815260200160002060010160016101000a81548160ff0219169083151502179055507f36eec91005ba67d5bd5b8613eb1fb78942ee7a5df64e90143e6fc5976a5c62c4848460056000888152602001908152602001600020600087815260200190815260200160002060000160056000898152602001908152602001600020600088815260200190815260200160002060010160009054906101000a900460ff16600560008a8152602001908152602001600020600089815260200190815260200160002060030160009054906101000a900460ff16600560008b815260200190815260200160002060008a8152602001908152602001600020600201600560008c815260200190815260200160002060008b815260200190815260200160002060010160019054906101000a900460ff16600560008d815260200190815260200160002060008c8152602001908152602001600020600401546040516104399897969594939291906113fb565b60405180910390a150505050565b60006104536003610b95565b90506000600460008381526020019081526020016000209050858582600001919061047f929190610c85565b50818160010181905550838160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fd72d670c5fdfb209118d285694e9d139bd8757168f3e410f8fd524b1beca9075868684876040516105449493929190611229565b60405180910390a16105566003610ba3565b505050505050565b610566610bb9565b73ffffffffffffffffffffffffffffffffffffffff166105846105e6565b73ffffffffffffffffffffffffffffffffffffffff16146105da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d190611364565b60405180910390fd5b6105e46000610bc1565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60046020528060005260406000206000915090508060000180546106329061158c565b80601f016020809104026020016040519081016040528092919081815260200182805461065e9061158c565b80156106ab5780601f10610680576101008083540402835291602001916106ab565b820191906000526020600020905b81548152906001019060200180831161068e57829003601f168201915b5050505050908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b600061072460066000898152602001908152602001600020610b95565b90506040518060c0016040528087878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200185600281111561078e5761078d6115be565b5b81526020016000151581526020016040518060200160405280600081525081526020018460018111156107c4576107c36115be565b5b815260200183815250600560008981526020019081526020016000206000838152602001908152602001600020600082015181600001908051906020019061080d929190610d0b565b5060208201518160010160006101000a81548160ff02191690836002811115610839576108386115be565b5b021790555060408201518160010160016101000a81548160ff021916908315150217905550606082015181600201908051906020019061087a929190610d0b565b5060808201518160030160006101000a81548160ff021916908360018111156108a6576108a56115be565b5b021790555060a082015181600401559050506108d360066000898152602001908152602001600020610ba3565b7f9d7ad63e119c9aae49c9b5c184a029fca4083340620eddc7b20208f54ea7271087828888888860405161090c9695949392919061139f565b60405180910390a150505050505050565b60056020528160005260406000206020528060005260406000206000915091505080600001805461094d9061158c565b80601f01602080910402602001604051908101604052809291908181526020018280546109799061158c565b80156109c65780601f1061099b576101008083540402835291602001916109c6565b820191906000526020600020905b8154815290600101906020018083116109a957829003601f168201915b5050505050908060010160009054906101000a900460ff16908060010160019054906101000a900460ff1690806002018054610a019061158c565b80601f0160208091040260200160405190810160405280929190818152602001828054610a2d9061158c565b8015610a7a5780601f10610a4f57610100808354040283529160200191610a7a565b820191906000526020600020905b815481529060010190602001808311610a5d57829003601f168201915b5050505050908060030160009054906101000a900460ff16908060040154905086565b610aa5610bb9565b73ffffffffffffffffffffffffffffffffffffffff16610ac36105e6565b73ffffffffffffffffffffffffffffffffffffffff1614610b19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1090611364565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8090611324565b60405180910390fd5b610b9281610bc1565b50565b600081600001549050919050565b6001816000016000828254019250508190555050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828054610c919061158c565b90600052602060002090601f016020900481019282610cb35760008555610cfa565b82601f10610ccc57803560ff1916838001178555610cfa565b82800160010185558215610cfa579182015b82811115610cf9578235825591602001919060010190610cde565b5b509050610d079190610d91565b5090565b828054610d179061158c565b90600052602060002090601f016020900481019282610d395760008555610d80565b82601f10610d5257805160ff1916838001178555610d80565b82800160010185558215610d80579182015b82811115610d7f578251825591602001919060010190610d64565b5b509050610d8d9190610d91565b5090565b5b80821115610daa576000816000905550600101610d92565b5090565b600081359050610dbd81611735565b92915050565b600081359050610dd28161174c565b92915050565b600081359050610de78161175c565b92915050565b60008083601f840112610e0357610e02611621565b5b8235905067ffffffffffffffff811115610e2057610e1f61161c565b5b602083019150836001820283011115610e3c57610e3b611626565b5b9250929050565b600081359050610e528161176c565b92915050565b600060208284031215610e6e57610e6d611630565b5b6000610e7c84828501610dae565b91505092915050565b60008060008060608587031215610e9f57610e9e611630565b5b600085013567ffffffffffffffff811115610ebd57610ebc61162b565b5b610ec987828801610ded565b94509450506020610edc87828801610dae565b9250506040610eed87828801610dae565b91505092959194509250565b600060208284031215610f0f57610f0e611630565b5b6000610f1d84828501610e43565b91505092915050565b60008060008060008060a08789031215610f4357610f42611630565b5b6000610f5189828a01610e43565b965050602087013567ffffffffffffffff811115610f7257610f7161162b565b5b610f7e89828a01610ded565b95509550506040610f9189828a01610dc3565b9350506060610fa289828a01610dd8565b9250506080610fb389828a01610e43565b9150509295509295509295565b60008060408385031215610fd757610fd6611630565b5b6000610fe585828601610e43565b9250506020610ff685828601610e43565b9150509250929050565b6000806000806060858703121561101a57611019611630565b5b600061102887828801610e43565b945050602061103987828801610e43565b935050604085013567ffffffffffffffff81111561105a5761105961162b565b5b61106687828801610ded565b925092505092959194509250565b61107d816114b8565b82525050565b61108c816114ca565b82525050565b61109b81611526565b82525050565b6110aa81611538565b82525050565b60006110bc83856114a7565b93506110c983858461154a565b6110d283611635565b840190509392505050565b60006110e88261149c565b6110f281856114a7565b9350611102818560208601611559565b61110b81611635565b840191505092915050565b600081546111238161158c565b61112d81866114a7565b94506001821660008114611148576001811461115a5761118d565b60ff198316865260208601935061118d565b61116385611487565b60005b8381101561118557815481890152600182019150602081019050611166565b808801955050505b50505092915050565b60006111a36026836114a7565b91506111ae82611646565b604082019050919050565b60006111c66022836114a7565b91506111d182611695565b604082019050919050565b60006111e96020836114a7565b91506111f4826116e4565b602082019050919050565b6112088161151c565b82525050565b60006020820190506112236000830184611074565b92915050565b600060608201905081810360008301526112448186886110b0565b905061125360208301856111ff565b6112606040830184611074565b95945050505050565b600060c082019050818103600083015261128381896110dd565b90506112926020830188611092565b61129f6040830187611083565b81810360608301526112b181866110dd565b90506112c060808301856110a1565b6112cd60a08301846111ff565b979650505050505050565b600060808201905081810360008301526112f281876110dd565b905061130160208301866111ff565b61130e6040830185611074565b61131b6060830184611074565b95945050505050565b6000602082019050818103600083015261133d81611196565b9050919050565b6000602082019050818103600083015261135d816111b9565b9050919050565b6000602082019050818103600083015261137d816111dc565b9050919050565b600060208201905061139960008301846111ff565b92915050565b600060a0820190506113b460008301896111ff565b6113c160208301886111ff565b81810360408301526113d48186886110b0565b90506113e36060830185611092565b6113f060808301846110a1565b979650505050505050565b600061010082019050611411600083018b6111ff565b61141e602083018a6111ff565b81810360408301526114308189611116565b905061143f6060830188611092565b61144c60808301876110a1565b81810360a083015261145e8186611116565b905061146d60c0830185611083565b61147a60e08301846111ff565b9998505050505050505050565b60008190508160005260206000209050919050565b600081519050919050565b600082825260208201905092915050565b60006114c3826114fc565b9050919050565b60008115159050919050565b60008190506114e48261170d565b919050565b60008190506114f782611721565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611531826114d6565b9050919050565b6000611543826114e9565b9050919050565b82818337600083830152505050565b60005b8381101561157757808201518184015260208101905061155c565b83811115611586576000848401525b50505050565b600060028204905060018216806115a457607f821691505b602082108114156115b8576115b76115ed565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f6d6c792068696465536572762063616e2066756c6c66696c6c2067656f686160008201527f7368000000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6003811061171e5761171d6115be565b5b50565b60028110611732576117316115be565b5b50565b61173e816114b8565b811461174957600080fd5b50565b6003811061175957600080fd5b50565b6002811061176957600080fd5b50565b6117758161151c565b811461178057600080fd5b5056fea264697066735822122051b6a2fbf4caf159e495d4a6c59cfaa93b0c1f6fe45867f715bee26b7e6fd3f064736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b1461010a5780639e9198c214610128578063a2fecb861461015b578063ab43572714610177578063f2fde38b146101ac57610093565b80630a44bba4146100985780631fa851ed146100c857806342683b70146100e4578063715018a614610100575b600080fd5b6100b260048036038101906100ad9190610ef9565b6101c8565b6040516100bf9190611384565b60405180910390f35b6100e260048036038101906100dd9190611000565b6101e6565b005b6100fe60048036038101906100f99190610e85565b610447565b005b61010861055e565b005b6101126105e6565b60405161011f919061120e565b60405180910390f35b610142600480360381019061013d9190610ef9565b61060f565b60405161015294939291906112d8565b60405180910390f35b61017560048036038101906101709190610f26565b610707565b005b610191600480360381019061018c9190610fc0565b61091d565b6040516101a396959493929190611269565b60405180910390f35b6101c660048036038101906101c19190610e58565b610a9d565b005b60066020528060005260406000206000915090508060000154905081565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610276576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026d90611344565b60405180910390fd5b818160056000878152602001908152602001600020600086815260200190815260200160002060020191906102ac929190610c85565b50600160056000868152602001908152602001600020600085815260200190815260200160002060010160016101000a81548160ff0219169083151502179055507f36eec91005ba67d5bd5b8613eb1fb78942ee7a5df64e90143e6fc5976a5c62c4848460056000888152602001908152602001600020600087815260200190815260200160002060000160056000898152602001908152602001600020600088815260200190815260200160002060010160009054906101000a900460ff16600560008a8152602001908152602001600020600089815260200190815260200160002060030160009054906101000a900460ff16600560008b815260200190815260200160002060008a8152602001908152602001600020600201600560008c815260200190815260200160002060008b815260200190815260200160002060010160019054906101000a900460ff16600560008d815260200190815260200160002060008c8152602001908152602001600020600401546040516104399897969594939291906113fb565b60405180910390a150505050565b60006104536003610b95565b90506000600460008381526020019081526020016000209050858582600001919061047f929190610c85565b50818160010181905550838160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fd72d670c5fdfb209118d285694e9d139bd8757168f3e410f8fd524b1beca9075868684876040516105449493929190611229565b60405180910390a16105566003610ba3565b505050505050565b610566610bb9565b73ffffffffffffffffffffffffffffffffffffffff166105846105e6565b73ffffffffffffffffffffffffffffffffffffffff16146105da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d190611364565b60405180910390fd5b6105e46000610bc1565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60046020528060005260406000206000915090508060000180546106329061158c565b80601f016020809104026020016040519081016040528092919081815260200182805461065e9061158c565b80156106ab5780601f10610680576101008083540402835291602001916106ab565b820191906000526020600020905b81548152906001019060200180831161068e57829003601f168201915b5050505050908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b600061072460066000898152602001908152602001600020610b95565b90506040518060c0016040528087878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200185600281111561078e5761078d6115be565b5b81526020016000151581526020016040518060200160405280600081525081526020018460018111156107c4576107c36115be565b5b815260200183815250600560008981526020019081526020016000206000838152602001908152602001600020600082015181600001908051906020019061080d929190610d0b565b5060208201518160010160006101000a81548160ff02191690836002811115610839576108386115be565b5b021790555060408201518160010160016101000a81548160ff021916908315150217905550606082015181600201908051906020019061087a929190610d0b565b5060808201518160030160006101000a81548160ff021916908360018111156108a6576108a56115be565b5b021790555060a082015181600401559050506108d360066000898152602001908152602001600020610ba3565b7f9d7ad63e119c9aae49c9b5c184a029fca4083340620eddc7b20208f54ea7271087828888888860405161090c9695949392919061139f565b60405180910390a150505050505050565b60056020528160005260406000206020528060005260406000206000915091505080600001805461094d9061158c565b80601f01602080910402602001604051908101604052809291908181526020018280546109799061158c565b80156109c65780601f1061099b576101008083540402835291602001916109c6565b820191906000526020600020905b8154815290600101906020018083116109a957829003601f168201915b5050505050908060010160009054906101000a900460ff16908060010160019054906101000a900460ff1690806002018054610a019061158c565b80601f0160208091040260200160405190810160405280929190818152602001828054610a2d9061158c565b8015610a7a5780601f10610a4f57610100808354040283529160200191610a7a565b820191906000526020600020905b815481529060010190602001808311610a5d57829003601f168201915b5050505050908060030160009054906101000a900460ff16908060040154905086565b610aa5610bb9565b73ffffffffffffffffffffffffffffffffffffffff16610ac36105e6565b73ffffffffffffffffffffffffffffffffffffffff1614610b19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1090611364565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8090611324565b60405180910390fd5b610b9281610bc1565b50565b600081600001549050919050565b6001816000016000828254019250508190555050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828054610c919061158c565b90600052602060002090601f016020900481019282610cb35760008555610cfa565b82601f10610ccc57803560ff1916838001178555610cfa565b82800160010185558215610cfa579182015b82811115610cf9578235825591602001919060010190610cde565b5b509050610d079190610d91565b5090565b828054610d179061158c565b90600052602060002090601f016020900481019282610d395760008555610d80565b82601f10610d5257805160ff1916838001178555610d80565b82800160010185558215610d80579182015b82811115610d7f578251825591602001919060010190610d64565b5b509050610d8d9190610d91565b5090565b5b80821115610daa576000816000905550600101610d92565b5090565b600081359050610dbd81611735565b92915050565b600081359050610dd28161174c565b92915050565b600081359050610de78161175c565b92915050565b60008083601f840112610e0357610e02611621565b5b8235905067ffffffffffffffff811115610e2057610e1f61161c565b5b602083019150836001820283011115610e3c57610e3b611626565b5b9250929050565b600081359050610e528161176c565b92915050565b600060208284031215610e6e57610e6d611630565b5b6000610e7c84828501610dae565b91505092915050565b60008060008060608587031215610e9f57610e9e611630565b5b600085013567ffffffffffffffff811115610ebd57610ebc61162b565b5b610ec987828801610ded565b94509450506020610edc87828801610dae565b9250506040610eed87828801610dae565b91505092959194509250565b600060208284031215610f0f57610f0e611630565b5b6000610f1d84828501610e43565b91505092915050565b60008060008060008060a08789031215610f4357610f42611630565b5b6000610f5189828a01610e43565b965050602087013567ffffffffffffffff811115610f7257610f7161162b565b5b610f7e89828a01610ded565b95509550506040610f9189828a01610dc3565b9350506060610fa289828a01610dd8565b9250506080610fb389828a01610e43565b9150509295509295509295565b60008060408385031215610fd757610fd6611630565b5b6000610fe585828601610e43565b9250506020610ff685828601610e43565b9150509250929050565b6000806000806060858703121561101a57611019611630565b5b600061102887828801610e43565b945050602061103987828801610e43565b935050604085013567ffffffffffffffff81111561105a5761105961162b565b5b61106687828801610ded565b925092505092959194509250565b61107d816114b8565b82525050565b61108c816114ca565b82525050565b61109b81611526565b82525050565b6110aa81611538565b82525050565b60006110bc83856114a7565b93506110c983858461154a565b6110d283611635565b840190509392505050565b60006110e88261149c565b6110f281856114a7565b9350611102818560208601611559565b61110b81611635565b840191505092915050565b600081546111238161158c565b61112d81866114a7565b94506001821660008114611148576001811461115a5761118d565b60ff198316865260208601935061118d565b61116385611487565b60005b8381101561118557815481890152600182019150602081019050611166565b808801955050505b50505092915050565b60006111a36026836114a7565b91506111ae82611646565b604082019050919050565b60006111c66022836114a7565b91506111d182611695565b604082019050919050565b60006111e96020836114a7565b91506111f4826116e4565b602082019050919050565b6112088161151c565b82525050565b60006020820190506112236000830184611074565b92915050565b600060608201905081810360008301526112448186886110b0565b905061125360208301856111ff565b6112606040830184611074565b95945050505050565b600060c082019050818103600083015261128381896110dd565b90506112926020830188611092565b61129f6040830187611083565b81810360608301526112b181866110dd565b90506112c060808301856110a1565b6112cd60a08301846111ff565b979650505050505050565b600060808201905081810360008301526112f281876110dd565b905061130160208301866111ff565b61130e6040830185611074565b61131b6060830184611074565b95945050505050565b6000602082019050818103600083015261133d81611196565b9050919050565b6000602082019050818103600083015261135d816111b9565b9050919050565b6000602082019050818103600083015261137d816111dc565b9050919050565b600060208201905061139960008301846111ff565b92915050565b600060a0820190506113b460008301896111ff565b6113c160208301886111ff565b81810360408301526113d48186886110b0565b90506113e36060830185611092565b6113f060808301846110a1565b979650505050505050565b600061010082019050611411600083018b6111ff565b61141e602083018a6111ff565b81810360408301526114308189611116565b905061143f6060830188611092565b61144c60808301876110a1565b81810360a083015261145e8186611116565b905061146d60c0830185611083565b61147a60e08301846111ff565b9998505050505050505050565b60008190508160005260206000209050919050565b600081519050919050565b600082825260208201905092915050565b60006114c3826114fc565b9050919050565b60008115159050919050565b60008190506114e48261170d565b919050565b60008190506114f782611721565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611531826114d6565b9050919050565b6000611543826114e9565b9050919050565b82818337600083830152505050565b60005b8381101561157757808201518184015260208101905061155c565b83811115611586576000848401525b50505050565b600060028204905060018216806115a457607f821691505b602082108114156115b8576115b76115ed565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f6d6c792068696465536572762063616e2066756c6c66696c6c2067656f686160008201527f7368000000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6003811061171e5761171d6115be565b5b50565b60028110611732576117316115be565b5b50565b61173e816114b8565b811461174957600080fd5b50565b6003811061175957600080fd5b50565b6002811061176957600080fd5b50565b6117758161151c565b811461178057600080fd5b5056fea264697066735822122051b6a2fbf4caf159e495d4a6c59cfaa93b0c1f6fe45867f715bee26b7e6fd3f064736f6c63430008070033",
  "devdoc": {
    "custom:security-contact": "alex@homebox.ie",
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "src/Trove/TroveRegistry.sol:TroveRegistry",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1987,
        "contract": "src/Trove/TroveRegistry.sol:TroveRegistry",
        "label": "hideServ",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 1989,
        "contract": "src/Trove/TroveRegistry.sol:TroveRegistry",
        "label": "vault",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 2006,
        "contract": "src/Trove/TroveRegistry.sol:TroveRegistry",
        "label": "_layersIdCounter",
        "offset": 0,
        "slot": "3",
        "type": "t_struct(Counter)1621_storage"
      },
      {
        "astId": 2042,
        "contract": "src/Trove/TroveRegistry.sol:TroveRegistry",
        "label": "layers",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_struct(Layer)2037_storage)"
      },
      {
        "astId": 2049,
        "contract": "src/Trove/TroveRegistry.sol:TroveRegistry",
        "label": "entities",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Entity)2028_storage))"
      },
      {
        "astId": 2054,
        "contract": "src/Trove/TroveRegistry.sol:TroveRegistry",
        "label": "entitiesCounter",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_struct(Counter)1621_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(EntityType)2010": {
        "encoding": "inplace",
        "label": "enum TroveRegistry.EntityType",
        "numberOfBytes": "1"
      },
      "t_enum(TreasureType)2013": {
        "encoding": "inplace",
        "label": "enum TroveRegistry.TreasureType",
        "numberOfBytes": "1"
      },
      "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Entity)2028_storage))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(uint256 => struct TroveRegistry.Entity))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(Entity)2028_storage)"
      },
      "t_mapping(t_uint256,t_struct(Counter)1621_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Counters.Counter)",
        "numberOfBytes": "32",
        "value": "t_struct(Counter)1621_storage"
      },
      "t_mapping(t_uint256,t_struct(Entity)2028_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct TroveRegistry.Entity)",
        "numberOfBytes": "32",
        "value": "t_struct(Entity)2028_storage"
      },
      "t_mapping(t_uint256,t_struct(Layer)2037_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct TroveRegistry.Layer)",
        "numberOfBytes": "32",
        "value": "t_struct(Layer)2037_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Counter)1621_storage": {
        "encoding": "inplace",
        "label": "struct Counters.Counter",
        "members": [
          {
            "astId": 1620,
            "contract": "src/Trove/TroveRegistry.sol:TroveRegistry",
            "label": "_value",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(Entity)2028_storage": {
        "encoding": "inplace",
        "label": "struct TroveRegistry.Entity",
        "members": [
          {
            "astId": 2015,
            "contract": "src/Trove/TroveRegistry.sol:TroveRegistry",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 2018,
            "contract": "src/Trove/TroveRegistry.sol:TroveRegistry",
            "label": "entityType",
            "offset": 0,
            "slot": "1",
            "type": "t_enum(EntityType)2010"
          },
          {
            "astId": 2020,
            "contract": "src/Trove/TroveRegistry.sol:TroveRegistry",
            "label": "status",
            "offset": 1,
            "slot": "1",
            "type": "t_bool"
          },
          {
            "astId": 2022,
            "contract": "src/Trove/TroveRegistry.sol:TroveRegistry",
            "label": "geohash",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 2025,
            "contract": "src/Trove/TroveRegistry.sol:TroveRegistry",
            "label": "treasureType",
            "offset": 0,
            "slot": "3",
            "type": "t_enum(TreasureType)2013"
          },
          {
            "astId": 2027,
            "contract": "src/Trove/TroveRegistry.sol:TroveRegistry",
            "label": "vaultId",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(Layer)2037_storage": {
        "encoding": "inplace",
        "label": "struct TroveRegistry.Layer",
        "members": [
          {
            "astId": 2030,
            "contract": "src/Trove/TroveRegistry.sol:TroveRegistry",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 2032,
            "contract": "src/Trove/TroveRegistry.sol:TroveRegistry",
            "label": "layerId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 2034,
            "contract": "src/Trove/TroveRegistry.sol:TroveRegistry",
            "label": "owner",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 2036,
            "contract": "src/Trove/TroveRegistry.sol:TroveRegistry",
            "label": "prover",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}